destdir.axis=${tomcat.webapps}/axis/WEB-INF/classes

src.service=src/sartoriWLC/project2/searchlabels


#for server
#directories containing the compiled classes of the service
build.service=${destdir.axis}
build.service.local=classes



build.classes.excludes=**/*.java,**/*.form

#directory containing the service jar files
dist.service=dist
dist.service.jar=${dist.service}/${service.name}.jar
dist.tomcat.jar=${tomcat.commonlib}/${service.name}.jar

#directory containing the service stub jar files
base.stub=stubs/${service.name}
dist.stub=${base.stub}/dist
dist.stub.jar=${dist.stub}/${service.name}Stub.jar
# directory containing the source code of the service stubs needed by clients
src.stub=${base.stub}/src
# directory containing the compiled code of the service stubs needed by clients
build.stub=${base.stub}/classes



#directory containing the deployment files
deployment.wsdd=deploy/SearchLabel/deploy_SearchLabel.wsdd
undeployment.wsdd=deploy/SearchLabel/undeploy_SearchLabel.wsdd

#for the deployment
#change according to your settings
target.port=8080
target.server=127.0.0.1
target.appname=axis


#for java2wsdl

j2w.classname=sartoriWLC.project2.searchlabels.SearchLabel
j2w.namespace=http://${target.server}:${target.port}/${target.appname}/services/${service.name}
j2w.location=http://${target.server}:${target.port}/${target.appname}/services/${service.name}
j2w.style=RPC
wsdl=wsdl
j2w.wsdl=${wsdl}/${service.name}/${service.name}.wsdl
wsdl.classpath=${build.service.local}

#for wsdl2java
#URL pointing to the WSDL file of the service
local.wsdl=http://${target.server}:${target.port}/${target.appname}/services/${service.name}?wsdl
#local.wsdl=${j2w.wsdl}



#library containing the client stub classes for the web service
#used by the testClient
test.classpath=${dist.stub.jar}:${libs.AxisLibrary.classpath}


javac.classpath=${libs.AxisLibrary.classpath}
